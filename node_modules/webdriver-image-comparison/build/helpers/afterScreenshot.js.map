{"version":3,"file":"afterScreenshot.js","sourceRoot":"","sources":["../../lib/helpers/afterScreenshot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAAiE;AACjE,kFAA6E;AAC7E,yCAA0C;AAC1C,iCAAwE;AACxE,4CAAkD;AAClD,6BAA0B;AAG1B,8EAAyE;AACzE,+BAA6B;AAM7B,SAA8B,eAAe,CAAC,QAAkB,EAAE,OAA+B;;;;;;oBAE7F,YAAY,GASV,OAAO,aATG,EACZ,WAAW,GAQT,OAAO,YARE,EACX,mBAAmB,GAOjB,OAAO,oBAPU,EACT,eAAe,GAMvB,OAAO,SANgB,EACzB,QAAQ,GAKN,OAAO,SALD,EACR,YAAY,GAIV,OAAO,aAJG,EACI,YAAY,GAG1B,OAAO,eAHmB,EAC5B,YAAY,GAEV,OAAO,aAFG,EACZ,cAAc,GACZ,OAAO,eADK,CACJ;oBAGN,IAAI,GAAG,wBAAgB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;oBAGhD,QAAQ,GAAG,sBAAc,CAAC,eAAe,CAAC,CAAC;oBAGjD,WAAM,wBAAe,CAAC,WAAW,EAAE,WAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAA;;oBAAxD,SAAwD,CAAC;yBAIrD,YAAY,EAAZ,cAAY;oBACd,WAAM,QAAQ,CAAC,wBAAc,EAAE,CAAC,YAAY,CAAC,EAAA;;oBAA7C,SAA6C,CAAC;;;yBAK5C,CAAA,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,EAApD,cAAoD;;;;oBAEpD,WAAM,QAAQ,CAAC,4BAAkB,EAAE,EAAC,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAC,EAAE,KAAK,CAAC,EAAA;;oBAAvF,SAAuF,CAAC;;;;oBAExF,OAAO,CAAC,GAAG,CAAC,cAAM,CAAC,oOAKf,GAAC,oIAGV,CAAC,CAAC,CAAC;;;yBAME,CAAA,mBAAmB,IAAI,qBAAa,CAAC,YAAY,CAAC,CAAA,EAAlD,cAAkD;oBACpD,WAAM,QAAQ,CAAC,8BAAoB,EAAE,yBAAa,CAAC,EAAA;;oBAAnD,SAAmD,CAAC;;wBAItD,WAAO;wBACL,QAAQ,UAAA;wBACR,IAAI,MAAA;wBACJ,gBAAgB,EAAE,eAAe,CAAC,gBAAgB;qBACnD,EAAC;;;;CACH;AA1DD,kCA0DC","sourcesContent":["import hideScrollBars from '../clientSideScripts/hideScrollbars';\nimport removeElementFromDom from '../clientSideScripts/removeElementFromDom';\nimport {CUSTOM_CSS_ID} from './constants';\nimport {checkIsMobile, formatFileName, getAndCreatePath} from './utils';\nimport {saveBase64Image} from '../methods/images';\nimport {join} from 'path';\nimport {Executor} from '../methods/methods.interface';\nimport {AfterScreenshotOptions, ScreenshotOutput} from './afterScreenshot.interfaces';\nimport hideRemoveElements from '../clientSideScripts/hideRemoveElements';\nimport {yellow} from \"chalk\";\n\n/**\n * Methods that need to be executed after a screenshot has been taken\n * to set all back to the original state\n */\nexport default async function afterScreenshot(executor: Executor, options: AfterScreenshotOptions): Promise<ScreenshotOutput> {\n  const {\n    actualFolder,\n    base64Image,\n    disableCSSAnimation,\n    fileName: fileNameOptions,\n    filePath,\n    hideElements,\n    hideScrollBars: noScrollBars,\n    platformName,\n    removeElements,\n  } = options;\n\n  // Get the path\n  const path = getAndCreatePath(actualFolder, filePath);\n\n  // Get the filePath\n  const fileName = formatFileName(fileNameOptions);\n\n  // Save the element\n  await saveBase64Image(base64Image, join(path, fileName));\n\n  // Show the scrollbars again\n  /* istanbul ignore else */\n  if (noScrollBars) {\n    await executor(hideScrollBars, !noScrollBars);\n  }\n\n  // Show elements again\n  /* istanbul ignore else */\n  if (hideElements.length > 0 || removeElements.length > 0) {\n    try {\n      await executor(hideRemoveElements, {hide: hideElements, remove: removeElements}, false);\n    } catch (e) {\n      console.log(yellow(`\n#####################################################################################\n WARNING:\n (One of) the elements that needed to be hidden or removed could not be found on the\n page and caused this error\n Error: ${e}\n We made sure the test didn't break.\n#####################################################################################\n`));\n    }\n  }\n\n  // Remove the custom set css\n  /* istanbul ignore else */\n  if (disableCSSAnimation || checkIsMobile(platformName)) {\n    await executor(removeElementFromDom, CUSTOM_CSS_ID);\n  }\n\n  // Return the needed data\n  return {\n    fileName,\n    path,\n    devicePixelRatio: fileNameOptions.devicePixelRatio,\n  };\n}\n"]}